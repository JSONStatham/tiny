services:
  # url-shortener:
  #   build:
  #     context: ./url-shortener
  #   container_name: url-shortener
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     url-shortener-db:
  #       condition: service_healthy
  #   networks:
  #     - url-shortener-net
  #   healthcheck:
  #     test: curl -s http://localhost:8080/up >/dev/null || exit 1
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  url-shortener-db:
    image: postgres:17.4
    restart: unless-stopped
    container_name: url-shortener-db
    ports:
      - 5432:5432
    env_file:
      - ./url-shortener/.env
    volumes:
      - url_shortener_db_data:/var/lib/postgresql/data
    networks:
      - url-shortener-net
    healthcheck:
      test: pg_isready -U postgres -d tiny
      interval: 5s
      timeout: 10s
      retries: 20

  # analytics:
  #   build:
  #     context: ./analytics
  #   container_name: analytics
  #   restart: unless-stopped
  #   networks:
  #     - analytics-net
  #   depends_on:
  #     analytics-db:
  #       condition: service_healthy

  analytics-db:
    image: postgres:17.4
    container_name: analytics-db
    restart: unless-stopped
    ports:
      - 5433:5432
    networks:
      - analytics-net
    env_file:
      - ./analytics/.env
    volumes:
      - analytics_db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres -d analytics
      interval: 5s
      timeout: 10s
      retries: 20

  kafka1:
    image: confluentinc/cp-kafka
    container_name: kafka1
    networks:
      - kafka-net
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka1:29092,CONTROLLER://kafka1:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:29092,EXTERNAL://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='

  kafka2:
    image: confluentinc/cp-kafka
    container_name: kafka2
    networks:
      - kafka-net
    hostname: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka2:29092,CONTROLLER://kafka2:29093,EXTERNAL://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka2:29092,EXTERNAL://localhost:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='

  kafka3:
    image: confluentinc/cp-kafka
    container_name: kafka3
    networks:
      - kafka-net
    hostname: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_LISTENERS: 'INTERNAL://kafka3:29092,CONTROLLER://kafka3:29093,EXTERNAL://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka3:29092,EXTERNAL://localhost:9094'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - kafka-net
    ports:
      - 9020:8080
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29092,kafka2:29092,kafka3:29092
    depends_on:
      - kafka1
      - kafka2
      - kafka3

volumes:
  url_shortener_db_data:
  analytics_db_data:
  kafka1_data:
  kafka2_data:
  kafka3_data:

networks:
  url-shortener-net:
    driver: bridge
  analytics-net:
    driver: bridge
  kafka-net:
    driver: bridge
